$date
	Sat Jun 27 23:52:11 2015
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tester $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var wire 8 # wAcumA_ID [7:0] $end
$var wire 8 $ wAcumB_ID [7:0] $end
$var wire 10 % wBrDir_ID [9:0] $end
$var wire 1 & wBrTaken_ID $end
$var wire 8 ' wData_WB [7:0] $end
$var wire 6 ( wOperation_ID [5:0] $end
$var wire 2 ) wOutSelMux_ID [1:0] $end
$scope module test $end
$var wire 8 * wAcumA_ID [7:0] $end
$var wire 8 + wAcumB_ID [7:0] $end
$var wire 10 , wBrDir_ID [9:0] $end
$var wire 1 & wBrTaken_ID $end
$var wire 6 - wOperation_ID [5:0] $end
$var wire 2 . wOutSelMux_ID [1:0] $end
$var reg 1 / clk $end
$var reg 1 0 reset $end
$var reg 8 1 wData_WB [7:0] $end
$upscope $end
$scope module pegado $end
$var wire 1 ! clk $end
$var wire 26 2 inputReg_IF_ID [25:0] $end
$var wire 26 3 outReg_IF_ID [25:0] $end
$var wire 16 4 outReg_IF_ID_FetchedInstr [15:0] $end
$var wire 10 5 outReg_IF_ID_NewPC [9:0] $end
$var wire 26 6 outReg_IF_ID_bar [25:0] $end
$var wire 1 " reset $end
$var wire 8 7 wAcumA_ID [7:0] $end
$var wire 8 8 wAcumB_ID [7:0] $end
$var wire 10 9 wBrDir_ID [9:0] $end
$var wire 10 : wBrDir_IF [9:0] $end
$var wire 1 & wBrTaken_ID $end
$var wire 1 ; wBrTaken_IF $end
$var wire 8 < wConstant_ID [7:0] $end
$var wire 3 = wControlAcum_ID [2:0] $end
$var wire 8 > wData_WB [7:0] $end
$var wire 16 ? wFetchedInst_IF [15:0] $end
$var wire 1 @ wMemEnable_ID $end
$var wire 10 A wNewPC_IF [9:0] $end
$var wire 6 B wOperation_ID [5:0] $end
$var wire 2 C wOutSelMux_ID [1:0] $end
$scope module etapa1 $end
$var wire 1 ! clk $end
$var wire 10 D iBr_dir [9:0] $end
$var wire 1 ; iBr_taken $end
$var wire 16 E oFetchedInst [15:0] $end
$var wire 10 F oNew_pc [9:0] $end
$var wire 1 " reset $end
$var wire 10 G wPc_pointer [9:0] $end
$scope module pcIF $end
$var wire 1 ! clk $end
$var wire 10 H iBr_dir [9:0] $end
$var wire 1 ; iBr_taken $end
$var wire 1 " reset $end
$var reg 10 I oNew_pc [9:0] $end
$var reg 10 J oPc_pointer [9:0] $end
$upscope $end
$scope module instructMem $end
$var wire 10 K iDir [9:0] $end
$var reg 16 L oInstruc [15:0] $end
$var reg 10 M rClear [9:0] $end
$upscope $end
$upscope $end
$scope module registro_IF_ID $end
$var wire 1 ! clk $end
$var wire 1 " clr $end
$var wire 1 N enable $end
$var wire 26 O in [25:0] $end
$var reg 26 P out [25:0] $end
$var reg 26 Q out_bar [25:0] $end
$upscope $end
$scope module etapa2 $end
$var wire 10 R branchDir [9:0] $end
$var wire 1 & branchTaken $end
$var wire 8 S constant [7:0] $end
$var wire 3 T controlAcum [2:0] $end
$var wire 8 U data [7:0] $end
$var wire 16 V instr [15:0] $end
$var wire 1 @ memEnable $end
$var wire 10 W newPC [9:0] $end
$var wire 6 X operation [5:0] $end
$var wire 2 Y outSelMux [1:0] $end
$var wire 8 Z salidaAcumA [7:0] $end
$var wire 8 [ salidaAcumB [7:0] $end
$scope module acumuladores $end
$var wire 8 \ constant [7:0] $end
$var wire 3 ] control [2:0] $end
$var wire 8 ^ data [7:0] $end
$var reg 8 _ salidaAcumA [7:0] $end
$var reg 8 ` salidaAcumB [7:0] $end
$upscope $end
$scope module decodificador $end
$var wire 8 a constant [7:0] $end
$var wire 16 b instr [15:0] $end
$var wire 6 c instrDecod [5:0] $end
$var wire 10 d instrInfo [9:0] $end
$var wire 10 e newPC [9:0] $end
$var wire 6 f operation [5:0] $end
$var wire 6 g saltoRel [5:0] $end
$var reg 10 h branchDir [9:0] $end
$var reg 1 i branchTaken $end
$var reg 3 j controlAcum [2:0] $end
$var reg 1 k memEnable $end
$var reg 2 l outSelMux [1:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx l
xk
bx j
xi
bx h
bx g
bx f
bx e
bx d
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
b1001010000000000xxxxxxxxxx O
1N
b0 M
b1001010000000000 L
bx K
bx J
bx I
bx H
bx G
bx F
b1001010000000000 E
bx D
bx C
bx B
bx A
x@
b1001010000000000 ?
bx >
bx =
bx <
x;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
b1001010000000000xxxxxxxxxx 2
bx 1
10
0/
bx .
bx -
bx ,
bx +
bx *
bx )
bx (
bx '
x&
bx %
bx $
bx #
1"
0!
$end
#5000
b100100011 L
b100100011 ?
b100100011 E
b1 I
b1001000110000000001 2
b1001000110000000001 O
b1 A
b1 F
b0 J
b0 G
b0 K
1/
1!
#10000
0/
0!
#15000
1/
1!
#20000
0/
0!
#23000
b110 1
b110 '
b110 >
b110 U
b110 ^
00
0"
#25000
b100100 h
b100100 :
b100100 D
b100100 H
b100100 %
b100100 ,
b100100 9
b100100 R
b110 _
b110 #
b110 *
b110 7
b110 Z
b100011 <
b100011 S
b100011 \
b100011 a
b100011 g
1k
1@
b0 l
b0 )
b0 .
b0 C
b0 Y
b10 j
b10 =
b10 T
b10 ]
0i
0;
0&
b0 c
b0 (
b0 -
b0 B
b0 X
b0 f
b100100011 d
b100100011 4
b100100011 V
b100100011 b
b1 5
b1 W
b1 e
b0 Q
b0 6
b1001000110000000001 P
b1001000110000000001 3
b10100100100 L
b10100100100 ?
b10100100100 E
b10 I
b101001001000000000010 2
b101001001000000000010 O
b10 A
b10 F
b1 J
b1 G
b1 K
1/
1!
#28000
b111 1
b111 '
b111 >
b111 U
b111 ^
#30000
0/
0!
#35000
b111 `
b111 $
b111 +
b111 8
b111 [
b100100 <
b100100 S
b100100 \
b100100 a
b100100 g
b100 j
b100 =
b100 T
b100 ]
b1 c
b1 (
b1 -
b1 B
b1 X
b1 f
b100100100 d
b100111 h
b100111 :
b100111 D
b100111 H
b100111 %
b100111 ,
b100111 9
b100111 R
b10100100100 4
b10100100100 V
b10100100100 b
b11 5
b11 W
b11 e
b101001001000000000011 P
b101001001000000000011 3
b1000100100101 L
b1000100100101 ?
b1000100100101 E
b11 I
b10001001001010000000011 2
b10001001001010000000011 O
b11 A
b11 F
b10 J
b10 G
b10 K
1/
1!
#40000
0/
0!
#45000
b100101 <
b100101 S
b100101 \
b100101 a
b100101 g
b11 l
b11 )
b11 .
b11 C
b11 Y
b0 j
b0 =
b0 T
b0 ]
b100100101 h
b100100101 :
b100100101 D
b100100101 H
b100100101 %
b100100101 ,
b100100101 9
b100100101 R
b100 c
b100 (
b100 -
b100 B
b100 X
b100 f
b100100101 d
b1000100100101 4
b1000100100101 V
b1000100100101 b
b10001001001010000000011 P
b10001001001010000000011 3
b1100000000000 L
b1100000000000 ?
b1100000000000 E
b100 I
b11000000000000000000100 2
b11000000000000000000100 O
b100 A
b100 F
b11 J
b11 G
b11 K
1/
1!
#50000
0/
0!
#55000
b111 _
b111 #
b111 *
b111 7
b111 Z
b0 <
b0 S
b0 \
b0 a
b0 g
0k
0@
b10 j
b10 =
b10 T
b10 ]
b101 h
b101 :
b101 D
b101 H
b101 %
b101 ,
b101 9
b101 R
b110 c
b110 (
b110 -
b110 B
b110 X
b110 f
b0 d
b1100000000000 4
b1100000000000 V
b1100000000000 b
b101 5
b101 W
b101 e
b11000000000000000000101 P
b11000000000000000000101 3
b110110000110010 L
b110110000110010 ?
b110110000110010 E
b101 I
b1101100001100100000000101 2
b1101100001100100000000101 O
b101 A
b101 F
b100 J
b100 G
b100 K
1/
1!
#60000
0/
0!
#65000
b110111 h
b110111 :
b110111 D
b110111 H
b110111 %
b110111 ,
b110111 9
b110111 R
b110010 <
b110010 S
b110010 \
b110010 a
b110010 g
b0 l
b0 )
b0 .
b0 C
b0 Y
b0 j
b0 =
b0 T
b0 ]
1i
1;
1&
b11011 c
b11011 (
b11011 -
b11011 B
b11011 X
b11011 f
b110010 d
b110110000110010 4
b110110000110010 V
b110110000110010 b
b1101100001100100000000101 P
b1101100001100100000000101 3
b1001010000000000 L
b1001010000000000 ?
b1001010000000000 E
b110 I
b10010100000000000000000110 2
b10010100000000000000000110 O
b110 A
b110 F
b101 J
b101 G
b101 K
1/
1!
#70000
0/
0!
#75000
b0 <
b0 S
b0 \
b0 a
b0 g
0i
0;
0&
b100101 c
b100101 (
b100101 -
b100101 B
b100101 X
b100101 f
b0 d
b111000 h
b111000 :
b111000 D
b111000 H
b111000 %
b111000 ,
b111000 9
b111000 R
b1001010000000000 4
b1001010000000000 V
b1001010000000000 b
b111000 5
b111000 W
b111000 e
b10010100000000000000111000 P
b10010100000000000000111000 3
b111000 I
b10010100000000000000111000 2
b10010100000000000000111000 O
b111000 A
b111000 F
b110111 J
b110111 G
b110111 K
1/
1!
#80000
0/
0!
#85000
b1110000000000 L
b1110000000000 ?
b1110000000000 E
b111001 I
b11100000000000000111001 2
b11100000000000000111001 O
b111001 A
b111001 F
b111000 J
b111000 G
b111000 K
1/
1!
#90000
0/
0!
#95000
b11 l
b11 )
b11 .
b11 C
b11 Y
b100 j
b100 =
b100 T
b100 ]
b111 c
b111 (
b111 -
b111 B
b111 X
b111 f
b111010 h
b111010 :
b111010 D
b111010 H
b111010 %
b111010 ,
b111010 9
b111010 R
b1110000000000 4
b1110000000000 V
b1110000000000 b
b111010 5
b111010 W
b111010 e
b11100000000000000111010 P
b11100000000000000111010 3
b1001010000000000 L
b1001010000000000 ?
b1001010000000000 E
b111010 I
b10010100000000000000111010 2
b10010100000000000000111010 O
b111010 A
b111010 F
b111001 J
b111001 G
b111001 K
1/
1!
#98000
