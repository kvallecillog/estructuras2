$date
	Tue Jun 30 10:36:48 2015
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tester $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$scope module test $end
$var reg 1 # clk $end
$var reg 1 $ reset $end
$upscope $end
$scope module pegado $end
$var wire 1 ! clk $end
$var wire 37 % inputReg_EX_MEM [36:0] $end
$var wire 47 & inputReg_ID_EX [46:0] $end
$var wire 26 ' inputReg_IF_ID [25:0] $end
$var wire 11 ( inputReg_MEM_WB [10:0] $end
$var wire 37 ) outReg_EX_MEM [36:0] $end
$var wire 8 * outReg_EX_MEM_AluResult_EX [7:0] $end
$var wire 3 + outReg_EX_MEM_ControlAcum_EX [2:0] $end
$var wire 2 , outReg_EX_MEM_MemControl_EX [1:0] $end
$var wire 37 - outReg_EX_MEM_bar [36:0] $end
$var wire 10 . outReg_EX_MEM_wBrDir_EX [9:0] $end
$var wire 6 / outReg_EX_MEM_wInstr_EX [5:0] $end
$var wire 47 0 outReg_ID_EX [46:0] $end
$var wire 8 1 outReg_ID_EX_AcumA_ID [7:0] $end
$var wire 8 2 outReg_ID_EX_AcumB_ID [7:0] $end
$var wire 10 3 outReg_ID_EX_BrDir_ID [9:0] $end
$var wire 8 4 outReg_ID_EX_Constant_ID [7:0] $end
$var wire 3 5 outReg_ID_EX_ControlAcum_ID [2:0] $end
$var wire 2 6 outReg_ID_EX_MemControl_ID [1:0] $end
$var wire 6 7 outReg_ID_EX_Operation_ID [5:0] $end
$var wire 2 8 outReg_ID_EX_OutSelMux_ID [1:0] $end
$var wire 47 9 outReg_ID_EX_bar [46:0] $end
$var wire 26 : outReg_IF_ID [25:0] $end
$var wire 16 ; outReg_IF_ID_FetchedInstr [15:0] $end
$var wire 10 < outReg_IF_ID_NewPC [9:0] $end
$var wire 26 = outReg_IF_ID_bar [25:0] $end
$var wire 11 > outReg_MEM_WB [10:0] $end
$var wire 3 ? outReg_MEM_WB_ControlAcum_MEM [2:0] $end
$var wire 16 @ outReg_MEM_WB_DataToWB_MEM [15:0] $end
$var wire 11 A outReg_MEM_WB_bar [10:0] $end
$var wire 1 " reset $end
$var wire 8 B wAcumA_ID [7:0] $end
$var wire 8 C wAcumB_ID [7:0] $end
$var wire 8 D wAluResult_EX [7:0] $end
$var wire 10 E wBrDir_EX [9:0] $end
$var wire 10 F wBrDir_ID [9:0] $end
$var wire 10 G wBrDir_IF [9:0] $end
$var wire 1 H wBrTaken_EX $end
$var wire 1 I wBrTaken_IF $end
$var wire 8 J wConstant_ID [7:0] $end
$var wire 3 K wControlAcum_EX [2:0] $end
$var wire 3 L wControlAcum_ID [2:0] $end
$var wire 3 M wControlAcum_ID_WB [2:0] $end
$var wire 3 N wControlAcum_MEM [2:0] $end
$var wire 8 O wDataToWB_MEM [7:0] $end
$var wire 8 P wData_WB [7:0] $end
$var wire 16 Q wFetchedInst_IF [15:0] $end
$var wire 6 R wInstr_EX [5:0] $end
$var wire 2 S wMemControl_EX [1:0] $end
$var wire 2 T wMemControl_ID [1:0] $end
$var wire 10 U wNewPC_IF [9:0] $end
$var wire 6 V wOperation_ID [5:0] $end
$var wire 2 W wOutSelMux_ID [1:0] $end
$scope module etapa1 $end
$var wire 1 ! clk $end
$var wire 10 X iBr_dir [9:0] $end
$var wire 1 I iBr_taken $end
$var wire 16 Y oFetchedInst [15:0] $end
$var wire 10 Z oNew_pc [9:0] $end
$var wire 1 " reset $end
$var wire 10 [ wPc_pointer [9:0] $end
$scope module pcIF $end
$var wire 1 ! clk $end
$var wire 10 \ iBr_dir [9:0] $end
$var wire 1 I iBr_taken $end
$var wire 1 " reset $end
$var reg 10 ] oNew_pc [9:0] $end
$var reg 10 ^ oPc_pointer [9:0] $end
$upscope $end
$scope module instructMem $end
$var wire 10 _ iDir [9:0] $end
$var reg 16 ` oInstruc [15:0] $end
$var reg 10 a rClear [9:0] $end
$upscope $end
$upscope $end
$scope module registro_IF_ID $end
$var wire 1 ! clk $end
$var wire 1 b clr $end
$var wire 1 c enable $end
$var wire 26 d in [25:0] $end
$var reg 26 e out [25:0] $end
$var reg 26 f out_bar [25:0] $end
$upscope $end
$scope module etapa2 $end
$var wire 10 g branchDir [9:0] $end
$var wire 8 h constant [7:0] $end
$var wire 3 i controlAcum_ID [2:0] $end
$var wire 3 j controlAcum_WB [2:0] $end
$var wire 8 k data [7:0] $end
$var wire 16 l instr [15:0] $end
$var wire 2 m memControl [1:0] $end
$var wire 10 n newPC [9:0] $end
$var wire 6 o operation [5:0] $end
$var wire 2 p outSelMux [1:0] $end
$var wire 8 q salidaAcumA [7:0] $end
$var wire 8 r salidaAcumB [7:0] $end
$scope module acumuladores $end
$var wire 3 s control [2:0] $end
$var wire 8 t data [7:0] $end
$var reg 8 u salidaAcumA [7:0] $end
$var reg 8 v salidaAcumB [7:0] $end
$upscope $end
$scope module decodificador $end
$var wire 8 w constant [7:0] $end
$var wire 16 x instr [15:0] $end
$var wire 6 y instrDecod [5:0] $end
$var wire 10 z instrInfo [9:0] $end
$var wire 10 { newPC [9:0] $end
$var wire 6 | operation [5:0] $end
$var wire 6 } saltoRel [5:0] $end
$var reg 10 ~ branchDir [9:0] $end
$var reg 3 !" controlAcum [2:0] $end
$var reg 2 "" memControl [1:0] $end
$var reg 2 #" outSelMux [1:0] $end
$upscope $end
$upscope $end
$scope module registro_ID_EX $end
$var wire 1 ! clk $end
$var wire 1 " clr $end
$var wire 1 $" enable $end
$var wire 47 %" in [46:0] $end
$var reg 47 &" out [46:0] $end
$var reg 47 '" out_bar [46:0] $end
$upscope $end
$scope module etapa3 $end
$var wire 8 (" HZDresult [7:0] $end
$var wire 8 )" HZDresult_bar [7:0] $end
$var wire 1 ! aluClk $end
$var wire 1 " aluReset $end
$var wire 10 *" branchDir_EX [9:0] $end
$var wire 10 +" branchDir_ID [9:0] $end
$var wire 1 H branchTaken $end
$var wire 1 ," exeHazardA $end
$var wire 1 -" exeHazardB $end
$var wire 8 ." iAcumA [7:0] $end
$var wire 8 /" iAcumB [7:0] $end
$var wire 6 0" iAluInstSel [5:0] $end
$var wire 8 1" iAluOper1 [7:0] $end
$var wire 8 2" iAluOper2 [7:0] $end
$var wire 8 3" iConst [7:0] $end
$var wire 3 4" iControlAcum_ID [2:0] $end
$var wire 2 5" iMemControl_ID [1:0] $end
$var wire 8 6" oAluData [7:0] $end
$var wire 3 7" oControlAcum_EX [2:0] $end
$var wire 6 8" oInstr_EX [5:0] $end
$var wire 2 9" oMemControl_EX [1:0] $end
$var wire 6 :" oldInstr_EX [5:0] $end
$var wire 6 ;" oldInstr_EX_bar [5:0] $end
$var wire 2 <" outSelMuxExe [1:0] $end
$var wire 8 =" realAluOp1 [7:0] $end
$var wire 8 >" realAluOp2 [7:0] $end
$scope module regEXEHazards $end
$var wire 1 ! clk $end
$var wire 1 " clr $end
$var wire 1 ?" enable $end
$var wire 6 @" in [5:0] $end
$var reg 6 A" out [5:0] $end
$var reg 6 B" out_bar [5:0] $end
$upscope $end
$scope module regRESHazard $end
$var wire 1 ! clk $end
$var wire 1 " clr $end
$var wire 1 C" enable $end
$var wire 8 D" in [7:0] $end
$var reg 8 E" out [7:0] $end
$var reg 8 F" out_bar [7:0] $end
$upscope $end
$scope module aluEx $end
$var wire 6 G" iAluInstSel [5:0] $end
$var wire 8 H" iAluOper1 [7:0] $end
$var wire 8 I" iAluOper2 [7:0] $end
$var wire 6 J" sReg [5:0] $end
$var reg 1 K" BAN $end
$var reg 1 L" BAZ $end
$var reg 1 M" BBN $end
$var reg 1 N" BBZ $end
$var reg 1 O" BCA $end
$var reg 1 P" BCB $end
$var reg 1 Q" branchTaken $end
$var reg 8 R" oAluData [7:0] $end
$upscope $end
$upscope $end
$scope module registro_EX_MEM $end
$var wire 1 ! clk $end
$var wire 1 S" clr $end
$var wire 1 T" enable $end
$var wire 37 U" in [36:0] $end
$var reg 37 V" out [36:0] $end
$var reg 37 W" out_bar [36:0] $end
$upscope $end
$scope module etapa4 $end
$var wire 10 X" iAddresReadNWrite [9:0] $end
$var wire 8 Y" iAluDataEX [7:0] $end
$var wire 3 Z" iControlAcum_EX [2:0] $end
$var wire 6 [" iInstr_EX [5:0] $end
$var wire 2 \" iOutMemSelect [1:0] $end
$var wire 1 ! memClk $end
$var wire 1 ]" memHazard $end
$var wire 1 " memReset $end
$var wire 3 ^" oControlAcum_MEM [2:0] $end
$var wire 8 _" oDataRamRead [7:0] $end
$var wire 8 `" oDataToWB [7:0] $end
$var wire 8 a" oldDataToWB [7:0] $end
$var wire 8 b" oldDataToWB_bar [7:0] $end
$var wire 6 c" oldInstr_MEM [5:0] $end
$var wire 6 d" oldInstr_MEM_bar [5:0] $end
$var wire 8 e" wDataMemIn [7:0] $end
$scope module regMemHazard $end
$var wire 1 ! clk $end
$var wire 1 " clr $end
$var wire 1 f" enable $end
$var wire 6 g" in [5:0] $end
$var reg 6 h" out [5:0] $end
$var reg 6 i" out_bar [5:0] $end
$upscope $end
$scope module regDataToWBHazard $end
$var wire 1 ! clk $end
$var wire 1 " clr $end
$var wire 1 j" enable $end
$var wire 8 k" in [7:0] $end
$var reg 8 l" out [7:0] $end
$var reg 8 m" out_bar [7:0] $end
$upscope $end
$scope module DATA_MEM $end
$var wire 1 ! clk $end
$var wire 8 n" iDataMemIn [7:0] $end
$var wire 10 o" iReadDataAddress [9:0] $end
$var wire 10 p" iWriteDataAddress [9:0] $end
$var wire 1 q" iWriteDataEnable $end
$var wire 1 r" memEnable $end
$var reg 8 s" oDataMemOut [7:0] $end
$upscope $end
$upscope $end
$scope module registro_MEM_WB $end
$var wire 1 ! clk $end
$var wire 1 t" clr $end
$var wire 1 u" enable $end
$var wire 11 v" in [10:0] $end
$var reg 11 w" out [10:0] $end
$var reg 11 x" out_bar [10:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx x"
bx w"
bx v"
1u"
0t"
bx s"
xr"
xq"
bx p"
bx o"
bx n"
bx m"
bx l"
bx k"
1j"
bx i"
bx h"
bx g"
1f"
bx e"
bx d"
bx c"
bx b"
bx a"
bx `"
bx _"
bx ^"
x]"
bx \"
bx ["
bx Z"
bx Y"
bx X"
bx W"
bx V"
b0xxxxxxxxxxxxxxxxxxxxx U"
1T"
0S"
b0 R"
0Q"
xP"
xO"
xN"
xM"
xL"
xK"
bx J"
bx I"
bx H"
bx G"
bx F"
bx E"
b0 D"
1C"
bx B"
bx A"
bx @"
1?"
bx >"
bx ="
bx <"
bx ;"
bx :"
bx 9"
bx 8"
bx 7"
b0 6"
bx 5"
bx 4"
bx 3"
bx 2"
bx 1"
bx 0"
bx /"
bx ."
x-"
x,"
bx +"
bx *"
bx )"
bx ("
bx '"
bx &"
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx %"
1$"
bx #"
bx ""
bx !"
bx ~
bx }
bx |
bx {
bx z
bx y
bx x
bx w
b0 v
b0 u
bx t
bx s
b0 r
b0 q
bx p
bx o
bx n
bx m
bx l
bx k
bx j
bx i
bx h
bx g
bx f
bx e
b0xxxxxxxxxx d
1c
0b
b0 a
b0 `
bx _
bx ^
bx ]
bx \
bx [
bx Z
b0 Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
b0 Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
0I
0H
bx G
bx F
bx E
b0 D
b0 C
b0 B
bx A
b0xxxxxxxx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
bx )
bx (
b0xxxxxxxxxx '
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx &
b0xxxxxxxxxxxxxxxxxxxxx %
0$
0#
0"
0!
$end
#5000
b0 ~
b0 F
b0 g
b0 O
b0 `"
b0 k"
0]"
b0 J
b0 h
b0 w
b0 }
b0 ""
b0 T
b0 m
b0 #"
b0 W
b0 p
b0 !"
b0 L
b0 i
0r"
0q"
b0 e"
b0 n"
b0 1"
b0 H"
b0 2"
b0 I"
0-"
0,"
b0 y
b0 &
b0 %"
b0 V
b0 o
b0 |
b0 z
b0 /
b0 ["
b0 g"
b0 .
b0 X"
b0 o"
b0 p"
b0 ,
b0 \"
b0 (
b0 v"
b0 N
b0 ^"
b0 +
b0 Z"
b0 *
b0 Y"
b0 P
b0 k
b0 t
b0 ="
b0 >"
b0 ;
b0 l
b0 x
b0 <
b0 n
b0 {
b0 ?
b0 M
b0 j
b0 s
b0 @
b0 1
b0 ."
b0 2
b0 /"
b0 E
b0 *"
b0 G
b0 X
b0 \
b0 3
b0 +"
b0 8
b0 <"
b0 R
b0 8"
b0 7
b0 0"
b0 @"
b0 G"
b0 4
b0 3"
b0 K
b0 7"
b0 5
b0 4"
b0 %
b0 U"
b0 S
b0 9"
b0 6
b0 5"
b1 f
b1 =
b0 e
b0 :
b1 W"
b1 -
b0 V"
b0 )
b1 x"
b1 A
b0 w"
b0 >
b1 '"
b1 9
b0 &"
b0 0
b1 B"
b1 ;"
b0 A"
b0 :"
b1 F"
b1 )"
b0 E"
b0 ("
b1 i"
b1 d"
b0 h"
b0 c"
b1 m"
b1 b"
b0 l"
b0 a"
b110000000101 `
b110000000101 Q
b110000000101 Y
b1 ]
b1100000001010000000001 '
b1100000001010000000001 d
b1 U
b1 Z
b0 ^
b0 [
b0 _
1b
1S"
1t"
1#
1!
1$
1"
#10000
0#
0!
#15000
1#
1!
#20000
0#
0!
#25000
1#
1!
#28000
0b
0S"
0t"
0$
0"
#30000
b101 J
b101 h
b101 w
b101 }
b1 !"
b1 L
b1 i
b11 y
b11 V
b11 o
b11 |
b101 z
b110 ~
b110000000110000010100100 &
b110000000110000010100100 %"
b110 F
b110 g
b110000000101 ;
b110000000101 l
b110000000101 x
b1 <
b1 n
b1 {
b0 f
b0 =
b1100000001010000000001 e
b1100000001010000000001 :
0#
0!
#35000
b1000000000101 `
b1000000000101 Q
b1000000000101 Y
b10 ]
b10000000001010000000010 '
b10000000001010000000010 d
b10 U
b10 Z
b1 ^
b1 [
b1 _
1#
1!
#40000
0K"
0L"
bx0x0x J"
b101 R"
b101 D
b101 6"
b101 D"
b11 !"
b11 L
b11 i
b101 1"
b101 H"
b101 2"
b101 I"
b100 y
b100 V
b100 o
b100 |
b111 ~
b111000001000000010101100 &
b111000001000000010101100 %"
b111 F
b111 g
b110 E
b110 *"
b110 G
b110 X
b110 \
b110 3
b110 +"
b11 R
b11 8"
b11 7
b11 0"
b11 @"
b11 G"
b101 4
b101 3"
b101001000000000110000011 %
b101001000000000110000011 U"
b1 K
b1 7"
b1 5
b1 4"
b1000000000101 ;
b1000000000101 l
b1000000000101 x
b10 <
b10 n
b10 {
b0 '"
b0 9
b110000000110000010100100 &"
b110000000110000010100100 0
b10000000001010000000010 e
b10000000001010000000010 :
0#
0!
#45000
b0 `
b0 Q
b0 Y
b11 ]
b11 '
b11 d
b11 U
b11 Z
b10 ^
b10 [
b10 _
1#
1!
#50000
0K"
0M"
0L"
0N"
bx0000 J"
b0 J
b0 h
b0 w
b0 }
b0 !"
b0 L
b0 i
b101 e"
b101 n"
b101 O
b101 `"
b101 k"
b0 y
b0 V
b0 o
b0 |
b0 z
b11 ~
b11000000000000000000000 &
b11000000000000000000000 %"
b11 F
b11 g
b11 /
b11 ["
b11 g"
b110 .
b110 X"
b110 o"
b110 p"
b101001 (
b101001 v"
b1 N
b1 ^"
b1 +
b1 Z"
b101 *
b101 Y"
b0 ;
b0 l
b0 x
b11 <
b11 n
b11 {
b111 E
b111 *"
b111 G
b111 X
b111 \
b111 3
b111 +"
b100 R
b100 8"
b100 7
b100 0"
b100 @"
b100 G"
b101011000000000111000100 %
b101011000000000111000100 U"
b11 K
b11 7"
b11 5
b11 4"
b11 e
b11 :
b111000001000000010101100 &"
b111000001000000010101100 0
b0 B"
b0 ;"
b11 A"
b11 :"
b0 F"
b0 )"
b101 E"
b101 ("
b0 W"
b0 -
b101001000000000110000011 V"
b101001000000000110000011 )
0#
0!
#55000
b100 ]
b100 '
b100 d
b100 U
b100 Z
b11 ^
b11 [
b11 _
1#
1!
#60000
b0 R"
b0 D
b0 6"
b0 D"
b101 u
b101 B
b101 q
b101 P
b101 k
b101 t
b100 /
b100 ["
b100 g"
b111 .
b111 X"
b111 o"
b111 p"
b101011 (
b101011 v"
b11 N
b11 ^"
b11 +
b11 Z"
b0 1"
b0 H"
b0 2"
b0 I"
b100 ~
b101000000000000000100000000000000000000000 &
b101000000000000000100000000000000000000000 %"
b100 F
b100 g
b1 ?
b1 M
b1 j
b1 s
b101 @
b11 E
b11 *"
b11 G
b11 X
b11 \
b11 3
b11 +"
b0 R
b0 8"
b0 7
b0 0"
b0 @"
b0 G"
b0 4
b0 3"
b11000000 %
b11000000 U"
b0 K
b0 7"
b0 5
b0 4"
b100 <
b100 n
b100 {
b0 x"
b0 A
b101001 w"
b101001 >
b0 m"
b0 b"
b101 l"
b101 a"
b0 i"
b0 d"
b11 h"
b11 c"
b101011000000000111000100 V"
b101011000000000111000100 )
b100 A"
b100 :"
b11000000000000000000000 &"
b11000000000000000000000 0
b100 e
b100 :
0#
0!
#65000
b1110000000000 `
b1110000000000 Q
b1110000000000 Y
b101 ]
b11100000000000000000101 '
b11100000000000000000101 d
b101 U
b101 Z
b100 ^
b100 [
b100 _
1#
1!
#70000
b11 #"
b11 W
b11 p
b10 !"
b10 L
b10 i
b0 e"
b0 n"
b0 O
b0 `"
b0 k"
b111 y
b111 V
b111 o
b111 |
b101 ~
b101 F
b101 g
b101 ="
b0 /
b0 ["
b0 g"
b11 .
b11 X"
b11 o"
b11 p"
b0 (
b0 v"
b0 N
b0 ^"
b0 +
b0 Z"
b0 *
b0 Y"
b101 v
b101000001010000000101110001110000000001000 &
b101000001010000000101110001110000000001000 %"
b101 C
b101 r
b1110000000000 ;
b1110000000000 l
b1110000000000 x
b101 <
b101 n
b101 {
b101 1
b101 ."
b100000000 %
b100000000 U"
b100 E
b100 *"
b100 G
b100 X
b100 \
b100 3
b100 +"
b11 ?
b11 M
b11 j
b11 s
b11100000000000000000101 e
b11100000000000000000101 :
b101000000000000000100000000000000000000000 &"
b101000000000000000100000000000000000000000 0
b1 B"
b1 ;"
b0 A"
b0 :"
b1 F"
b1 )"
b0 E"
b0 ("
b11000000 V"
b11000000 )
b100 h"
b100 c"
b101011 w"
b101011 >
0#
0!
#75000
b110 ]
b11100000000000000000110 '
b11100000000000000000110 d
b110 U
b110 Z
b101 ^
b101 [
b101 _
1#
1!
#80000
b1010 R"
b1010 D
b1010 6"
b1010 D"
0L"
0O"
b0x0000 J"
b101 1"
b101 H"
b101 2"
b101 I"
b0 P
b0 k
b0 t
b100 .
b100 X"
b100 o"
b100 p"
b101 >"
b110 ~
b101000001010000000110110001110000000001000 &
b101000001010000000110110001110000000001000 %"
b110 F
b110 g
b0 ?
b0 M
b0 j
b0 s
b0 @
b101 2
b101 /"
b101 E
b101 *"
b101 G
b101 X
b101 \
b101 3
b101 +"
b11 8
b11 <"
b111 R
b111 8"
b111 7
b111 0"
b111 @"
b111 G"
b1010010000000000101000111 %
b1010010000000000101000111 U"
b10 K
b10 7"
b10 5
b10 4"
b110 <
b110 n
b110 {
b1 x"
b1 A
b0 w"
b0 >
b1 m"
b1 b"
b0 l"
b0 a"
b1 i"
b1 d"
b0 h"
b0 c"
b100000000 V"
b100000000 )
b101000001010000000101110001110000000001000 &"
b101000001010000000101110001110000000001000 0
b11100000000000000000110 e
b11100000000000000000110 :
0#
0!
#85000
b111 ]
b11100000000000000000111 '
b11100000000000000000111 d
b111 U
b111 Z
b110 ^
b110 [
b110 _
1#
1!
#90000
b1111 R"
b1111 D
b1111 6"
b1111 D"
b1010 1"
b1010 H"
b1010 ="
1,"
b1010 e"
b1010 n"
b1010 O
b1010 `"
b1010 k"
b111 ~
b101000001010000000111110001110000000001000 &
b101000001010000000111110001110000000001000 %"
b111 F
b111 g
b111 /
b111 ["
b111 g"
b101 .
b101 X"
b101 o"
b101 p"
b1010010 (
b1010010 v"
b10 N
b10 ^"
b10 +
b10 Z"
b1010 *
b1010 Y"
b111 <
b111 n
b111 {
b1111010000000000110000111 %
b1111010000000000110000111 U"
b110 E
b110 *"
b110 G
b110 X
b110 \
b110 3
b110 +"
b11100000000000000000111 e
b11100000000000000000111 :
b101000001010000000110110001110000000001000 &"
b101000001010000000110110001110000000001000 0
b0 B"
b0 ;"
b111 A"
b111 :"
b0 F"
b0 )"
b1010 E"
b1010 ("
b1010010000000000101000111 V"
b1010010000000000101000111 )
0#
0!
#95000
b1000 ]
b11100000000000000001000 '
b11100000000000000001000 d
b1000 U
b1000 Z
b111 ^
b111 [
b111 _
1#
1!
#100000
b10100 R"
b10100 D
b10100 6"
b10100 D"
b1111 e"
b1111 n"
b1111010 (
b1111010 v"
b1111 O
b1111 `"
b1111 k"
b1010 u
b1010 B
b1010 q
b1010 P
b1010 k
b1010 t
b110 .
b110 X"
b110 o"
b110 p"
b1111 *
b1111 Y"
b1111 1"
b1111 H"
b1000 ~
b1010000001010000001000110001110000000001000 &
b1010000001010000001000110001110000000001000 %"
b1000 F
b1000 g
b10 ?
b10 M
b10 j
b10 s
b1010 @
b1111 ="
b10100010000000000111000111 %
b10100010000000000111000111 U"
b111 E
b111 *"
b111 G
b111 X
b111 \
b111 3
b111 +"
b1000 <
b1000 n
b1000 {
b0 x"
b0 A
b1010010 w"
b1010010 >
b0 m"
b0 b"
b1010 l"
b1010 a"
b0 i"
b0 d"
b111 h"
b111 c"
b1111010000000000110000111 V"
b1111010000000000110000111 )
b1111 E"
b1111 ("
b101000001010000000111110001110000000001000 &"
b101000001010000000111110001110000000001000 0
b11100000000000000001000 e
b11100000000000000001000 :
0#
0!
#105000
b0 `
b0 Q
b0 Y
b1001 ]
b1001 '
b1001 d
b1001 U
b1001 Z
b1000 ^
b1000 [
b1000 _
1#
1!
#110000
b11001 R"
b11001 D
b11001 6"
b11001 D"
b0 #"
b0 W
b0 p
b0 !"
b0 L
b0 i
b10100 e"
b10100 n"
b10100010 (
b10100010 v"
b10100 O
b10100 `"
b10100 k"
b1111 u
b1111 B
b1111 q
b0 y
b0 V
b0 o
b0 |
b1001 ~
b1111000001010000001001000000000000000000000 &
b1111000001010000001001000000000000000000000 %"
b1001 F
b1001 g
b10100 1"
b10100 H"
b111 .
b111 X"
b111 o"
b111 p"
b10100 *
b10100 Y"
b1111 P
b1111 k
b1111 t
b0 ;
b0 l
b0 x
b1001 <
b1001 n
b1001 {
b1010 1
b1010 ."
b11001010000000001000000111 %
b11001010000000001000000111 U"
b1000 E
b1000 *"
b1000 G
b1000 X
b1000 \
b1000 3
b1000 +"
b10100 ="
b1111 @
b1001 e
b1001 :
b1010000001010000001000110001110000000001000 &"
b1010000001010000001000110001110000000001000 0
b10100 E"
b10100 ("
b10100010000000000111000111 V"
b10100010000000000111000111 )
b1111 l"
b1111 a"
b1111010 w"
b1111010 >
0#
0!
#115000
b1010 ]
b1010 '
b1010 d
b1010 U
b1010 Z
b1001 ^
b1001 [
b1001 _
1#
1!
#120000
b0 R"
b0 D
b0 6"
b0 D"
0,"
b10100 u
b10100 B
b10100 q
b11001 e"
b11001 n"
b11001010 (
b11001010 v"
b11001 O
b11001 `"
b11001 k"
b0 2"
b0 I"
b10100 P
b10100 k
b10100 t
b1000 .
b1000 X"
b1000 o"
b1000 p"
b11001 *
b11001 Y"
b0 1"
b0 H"
b1010 ~
b10100000001010000001010000000000000000000000 &
b10100000001010000001010000000000000000000000 %"
b1010 F
b1010 g
b10100 @
b1111 ="
b1111 1
b1111 ."
b1001 E
b1001 *"
b1001 G
b1001 X
b1001 \
b1001 3
b1001 +"
b0 8
b0 <"
b0 R
b0 8"
b0 7
b0 0"
b0 @"
b0 G"
b1001000000 %
b1001000000 U"
b0 K
b0 7"
b0 5
b0 4"
b1010 <
b1010 n
b1010 {
b10100010 w"
b10100010 >
b10100 l"
b10100 a"
b11001010000000001000000111 V"
b11001010000000001000000111 )
b11001 E"
b11001 ("
b1111000001010000001001000000000000000000000 &"
b1111000001010000001001000000000000000000000 0
b1010 e
b1010 :
0#
0!
#125000
b1011 ]
b1011 '
b1011 d
b1011 U
b1011 Z
b1010 ^
b1010 [
b1010 _
1#
1!
#130000
b0 e"
b0 n"
b0 O
b0 `"
b0 k"
b11001 u
b11001 B
b11001 q
b1011 ~
b11001000001010000001011000000000000000000000 &
b11001000001010000001011000000000000000000000 %"
b1011 F
b1011 g
b10100 ="
b0 /
b0 ["
b0 g"
b1001 .
b1001 X"
b1001 o"
b1001 p"
b0 (
b0 v"
b0 N
b0 ^"
b0 +
b0 Z"
b0 *
b0 Y"
b11001 P
b11001 k
b11001 t
b1011 <
b1011 n
b1011 {
b10100 1
b10100 ."
b1010000000 %
b1010000000 U"
b1010 E
b1010 *"
b1010 G
b1010 X
b1010 \
b1010 3
b1010 +"
b11001 @
b1011 e
b1011 :
b10100000001010000001010000000000000000000000 &"
b10100000001010000001010000000000000000000000 0
b1 B"
b1 ;"
b0 A"
b0 :"
b1 F"
b1 )"
b0 E"
b0 ("
b1001000000 V"
b1001000000 )
b11001 l"
b11001 a"
b11001010 w"
b11001010 >
0#
0!
#135000
b1100 ]
b1100 '
b1100 d
b1100 U
b1100 Z
b1011 ^
b1011 [
b1011 _
1#
1!
#140000
b0 P
b0 k
b0 t
b1010 .
b1010 X"
b1010 o"
b1010 p"
b11001 ="
b1100 ~
b11001000001010000001100000000000000000000000 &
b11001000001010000001100000000000000000000000 %"
b1100 F
b1100 g
b0 ?
b0 M
b0 j
b0 s
b0 @
b11001 1
b11001 ."
b1011000000 %
b1011000000 U"
b1011 E
b1011 *"
b1011 G
b1011 X
b1011 \
b1011 3
b1011 +"
b1100 <
b1100 n
b1100 {
b1 x"
b1 A
b0 w"
b0 >
b1 m"
b1 b"
b0 l"
b0 a"
b1 i"
b1 d"
b0 h"
b0 c"
b1010000000 V"
b1010000000 )
b11001000001010000001011000000000000000000000 &"
b11001000001010000001011000000000000000000000 0
b1100 e
b1100 :
0#
0!
#145000
b1101 ]
b1101 '
b1101 d
b1101 U
b1101 Z
b1100 ^
b1100 [
b1100 _
1#
1!
#150000
b1101 ~
b11001000001010000001101000000000000000000000 &
b11001000001010000001101000000000000000000000 %"
b1101 F
b1101 g
b1011 .
b1011 X"
b1011 o"
b1011 p"
b1101 <
b1101 n
b1101 {
b1100000000 %
b1100000000 U"
b1100 E
b1100 *"
b1100 G
b1100 X
b1100 \
b1100 3
b1100 +"
b1101 e
b1101 :
b11001000001010000001100000000000000000000000 &"
b11001000001010000001100000000000000000000000 0
b1011000000 V"
b1011000000 )
0#
0!
#155000
b1110 ]
b1110 '
b1110 d
b1110 U
b1110 Z
b1101 ^
b1101 [
b1101 _
1#
1!
#160000
b1100 .
b1100 X"
b1100 o"
b1100 p"
b1110 ~
b11001000001010000001110000000000000000000000 &
b11001000001010000001110000000000000000000000 %"
b1110 F
b1110 g
b1101000000 %
b1101000000 U"
b1101 E
b1101 *"
b1101 G
b1101 X
b1101 \
b1101 3
b1101 +"
b1110 <
b1110 n
b1110 {
b1100000000 V"
b1100000000 )
b11001000001010000001101000000000000000000000 &"
b11001000001010000001101000000000000000000000 0
b1110 e
b1110 :
0#
0!
#165000
b1111 ]
b1111 '
b1111 d
b1111 U
b1111 Z
b1110 ^
b1110 [
b1110 _
1#
1!
#170000
b1111 ~
b11001000001010000001111000000000000000000000 &
b11001000001010000001111000000000000000000000 %"
b1111 F
b1111 g
b1101 .
b1101 X"
b1101 o"
b1101 p"
b1111 <
b1111 n
b1111 {
b1110000000 %
b1110000000 U"
b1110 E
b1110 *"
b1110 G
b1110 X
b1110 \
b1110 3
b1110 +"
b1111 e
b1111 :
b11001000001010000001110000000000000000000000 &"
b11001000001010000001110000000000000000000000 0
b1101000000 V"
b1101000000 )
0#
0!
#175000
b10000 ]
b10000 '
b10000 d
b10000 U
b10000 Z
b1111 ^
b1111 [
b1111 _
1#
1!
#180000
b1110 .
b1110 X"
b1110 o"
b1110 p"
b10000 ~
b11001000001010000010000000000000000000000000 &
b11001000001010000010000000000000000000000000 %"
b10000 F
b10000 g
b1111000000 %
b1111000000 U"
b1111 E
b1111 *"
b1111 G
b1111 X
b1111 \
b1111 3
b1111 +"
b10000 <
b10000 n
b10000 {
b1110000000 V"
b1110000000 )
b11001000001010000001111000000000000000000000 &"
b11001000001010000001111000000000000000000000 0
b10000 e
b10000 :
0#
0!
#185000
b10001 ]
b10001 '
b10001 d
b10001 U
b10001 Z
b10000 ^
b10000 [
b10000 _
1#
1!
#190000
b10001 ~
b11001000001010000010001000000000000000000000 &
b11001000001010000010001000000000000000000000 %"
b10001 F
b10001 g
b1111 .
b1111 X"
b1111 o"
b1111 p"
b10001 <
b10001 n
b10001 {
b10000000000 %
b10000000000 U"
b10000 E
b10000 *"
b10000 G
b10000 X
b10000 \
b10000 3
b10000 +"
b10001 e
b10001 :
b11001000001010000010000000000000000000000000 &"
b11001000001010000010000000000000000000000000 0
b1111000000 V"
b1111000000 )
0#
0!
#195000
b10010 ]
b10010 '
b10010 d
b10010 U
b10010 Z
b10001 ^
b10001 [
b10001 _
1#
1!
#198000
